# PROBLEM STATEMENT
  Given an integer array nums, return an array answer 
  such that answer[i] is equal to the product of all the 
  elements of nums except nums[i].
  The product of any prefix or suffix of nums is
  guaranteed to fit in a 32-bit integer.
  You must write an algorithm that runs in O(n) 
  time and without using the division operation.


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) 
    {
        int n= nums.size();      
        vector<int> res(n);
        res[0] = nums[0];
        for(int i=1;i<n;i++)
        {
            res[i] = res[i-1] * nums[i];
        }
        res[n-1] = res[n-2];
        int r=1;
        for(int i=n-1;i>0;i--)
        {
            res[i] = res[i-1] * r;
            r *= nums[i];
        }
        res[0] = r;
        return res;
    }
};
